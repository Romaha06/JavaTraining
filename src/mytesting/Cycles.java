package mytesting;

public class Cycles {
    public static void main(String[] args) {
        /* Цикл - это некая конструкция кода которая позволяет выполнять действие
         * несколько раз.*/

        System.out.println("Цикл for: ");
        // Из чего состоит цикр for, первым делом нам нужно указать оператор for
        // для того что бы создать данный цикл, далу в круглых скобках
        // мы пишем сед. три части, для начала создаём счетчик, он позваляет нам повторять
        // какой то фрагмент кода некоторое кол. раз, его мы приравниваем к нулю
        // далее мы пишем условие, при котором данный цикл должен выполняться
        // в данном случае цикл будет выполняться пока i<5, далее в третей части
        // мы пишем i++ что означает что мы увеличиваем счетчик на единицу
        // таким образом изнчально i будет равна 0 и цикл выполнит какую то этерацию
        // то есть кай то фрагмент кода который будет указан в теле цикла
        // в фигурных скобках, после того как нашь фрагмент кода выполнится,
        // наша i увеличется на еденицу, то есть выполнится инкримент и далее
        // выполнится тот же код. И так нашь код будет повторяться пока
        // i не станет меньше пяти, так как мы задали такое условие
        System.out.println("Start program");
        for (int i = 0; i < 5; i++) {
            System.out.println(i);// в тело цикла можно вставлять множество
            // любого кода который мы хотим повторять
        }
        System.out.println("End program");
        System.out.println();

        for (int i = 10; i > 0; i--) {
            System.out.println(i);// Щотчик можно как увеличивать так и уменьшать
            // в данном случае мы уменьшали от 10 до 0
            // то есть в услови пока i больше 0
            // где i = 10 и будет уменьшаться на 1
            // пока i будет больше 0
        }
        System.out.println();

        //Так же счетчик можно (* , +, -, /)
        for (int i = 0; i < 5; i++) {
            System.out.println(i * 10);// В данном случае мы увеличиваем i
            // пока оно меньше 5 и умножаем еого
            // постоянно на 10
        }
        System.out.println();

        /* Используем цикл for для работы с массивами*/
        int[] arrey = new int[10];//Создали масив на 10 элементов
        //С помощью цикла for  заполним нашь массив
        for (int i = 0; i < 10; i++) { //Создали цикл for на 10 этераци
            arrey[i] = i * 2;// Приавниваем массив к значению щотчика
            // и умнозаем каждый элемент на 2
        }
        for (int i = 0; i < 10; i++) {
            System.out.println(" Element with index " + i + " is: " + arrey[i]);
            // Таким образом мы выведем на эран 10 строк одинаковых
            // в которых будет написано элемент с индексом, индек
            // будет подставляться из цикла и дальше значение элемента
            // Таким образом нам не нужно писать много мтрок в ручную
            // мы просто воспользуемся одним циклом
        }
        System.out.println();

        System.out.println("Цикл foreach");
        // Это тот же цикл for но в нем мы не создавали щетчик и не инкриментировали
        // его, в нём мы использовали перебор, создали  переменную типа int и назвали
        // ее element и прошлись сразу по всему массиву, то есть наш цикл работает пока
        // мы не переберем все элементы масива и в каждой новой этерации данный элемент int
        // равен очередному элементу масива и в нутри цикла мы можем работать
        // с этой переменной element. В данном случае мы просто вывели ее на экран
        // То есть с каждой новой этерацией element принемает значения элемента массива
        // и далее мы данный элемент выводим на экран. так работает цикл foreach
        for (int element : arrey) {
            System.out.println(element);
        }
        System.out.println();

        System.out.println("Цикл while");
        // создаем перенменнуй i равную нулю и создаём цикл while с условием
        // пока i меньше 10, подом добавляем команду и после выполнения
        // команды увеличиваем i на еденницу. И так наш цикл будет
        // работать до тех пор пока i < 10
        int i = 0;
        while (i < 10) {
            System.out.println("While: " + i);
            i++;
        }
        System.out.println();
        // В условии можно записавать некое boolean значение и
        // если оно возвращает true то цикл продолжает свое выполнение
        // к примеру зоздадим boolean переменную, присвоим ей значение
        // true и в условии просто напишем название переменной к примеру
        // bool то есть данный цикл булет выполняться пока переменная бул
        // будет равна true

        int a = 0;
        boolean bool = true;
        while (bool) {
            System.out.println("While: " + a);
            a++;
            // А теперь создадим случай когда bool будет равен false
            // к примеру мы будем использовать тотже а++ и напишел условие
            // если а равно 5 тогда bool равен false
            // таким образом нашь цикл будет выполняться пока
            // bool равен true но когда a будет равен 5 тогда
            // bool станет false и в таком случае цикл уже прирвется
            if (a == 5) bool = false;
        }
        System.out.println();


        System.out.println("Do while: ");
        /* Отличия от обычного while в том что в этом случаем мы сначало
         * выполняем действие а потом проверку. Так же в этом случаее
         * одна проверка обязательно выпонится не зывисимо от того будет
         * ли наше условие true. Пример:*/
        a = 0;
        do {
            System.out.println("Do: " + a);
            a++;
        } while (a < 5);
    }
}


